buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.1.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'

//bootWar{
//	archiveName "realEstate.war"
//}


bootWar {
	archiveName getProjectProperty('warName')
}

task deploy (dependsOn: build){
    doLast{
        delete getProjectProperty('deployPath')+getProjectProperty('warName')[0,-4], getProjectProperty('deployPath')+ getProjectProperty('warName') 
        copy {
            from "build/libs"
            into getProjectProperty('deployPath')
            include getProjectProperty('warName')
        }
   }
}


repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compileOnly ("org.springframework.boot:spring-boot-starter-tomcat")
    //testCompile("org.springframework.boot:spring-boot-starter-test")
    
    // JPA Data
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Use MySQL Connector-J
   // compile 'mysql:mysql-connector-java'
   
   	compile 'org.springframework.boot:spring-boot-starter-mail'
   	compile("org.springframework:spring-jdbc")

	// https://mvnrepository.com/artifact/org.thymeleaf/thymeleaf-spring5
	//compile group: 'org.thymeleaf', name: 'thymeleaf-spring5', version: '3.0.9.RELEASE'
	
	
	// https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
	compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.3.3'
	
	// https://mvnrepository.com/artifact/org.json/json
	compile group: 'org.json', name: 'json', version: '20180130'
	
	// https://mvnrepository.com/artifact/javax.servlet/jstl
	compile group: 'javax.servlet', name: 'jstl', version: '1.2'


	// https://mvnrepository.com/artifact/com.google.code.gson/gson
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.2'
	
	// https://mvnrepository.com/artifact/org.tuckey/urlrewritefilter
	compile group: 'org.tuckey', name: 'urlrewritefilter', version: '3.1.0'
	
	// https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
	
	// https://mvnrepository.com/artifact/org.apache.poi/poi
	compile group: 'org.apache.poi', name: 'poi', version: '3.15'
	
	// https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml
	compile group: 'org.apache.poi', name: 'poi-ooxml', version: '3.15'
	
	
	// https://mvnrepository.com/artifact/org.xhtmlrenderer/flying-saucer-pdf-itext5
	compile group: 'org.xhtmlrenderer', name: 'flying-saucer-pdf-itext5', version: '9.0.1'


	
	// https://mvnrepository.com/artifact/commons-io/commons-io
	//compile group: 'commons-io', name: 'commons-io', version: '2.4'
	
	// https://mvnrepository.com/artifact/com.itextpdf.tool/xmlworker
	//compile group: 'com.itextpdf.tool', name: 'xmlworker', version: '5.4.1'
	
	// https://mvnrepository.com/artifact/ch.qos.logback/logback-core
	//compile group: 'ch.qos.logback', name: 'logback-core', version: '1.3.0-alpha4'
	
	// https://mvnrepository.com/artifact/org.apache.commons/commons-io
	compile group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'
	
	
}

def String getProjectProperty(String propertyName)
{
  String movieTitle = "null"
  if (hasProperty(propertyName))
  {
     movieTitle = this.properties[propertyName]
  }
  return movieTitle
}